name: test-github-app

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      SWAGGER_URL:
        description: 'The url to download the swagger schema.'
        required: true
        type: string
        default: 'https://api.laserfiche.com/repository/swagger/v1/swagger.json'

env:
  NPM_VERSION: '1.0.0'

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Set DOCUMENTATION_VERSION environment variable
        run: |
          npm_version=${{ env.NPM_VERSION }}
          documentation_version=${npm_version%%.*}.x
          echo $npm_version
          echo $documentation_version
          echo DOCUMENTATION_VERSION=$documentation_version >> $GITHUB_ENV

      - name: Echo environment variable
        run: |
          echo 'The doc version is ${{ env.DOCUMENTATION_VERSION }}.'
          echo 'The doc version is $DOCUMENTATION_VERSION.'
    
    # - name: Checkout repository client project
    #   uses: actions/checkout@v3
#       with:
#         repository: jason-chan-lf/lf-api-client-core-dotnet
        
#     - name: Setup environment variables
#       run: |
#         # Make the swagger url an environment variable secret
#         SWAGGER_URL_INPUT=$(jq -r '.inputs.SWAGGER_URL' $GITHUB_EVENT_PATH)
#         echo ::add-mask::$SWAGGER_URL_INPUT
#         echo SWAGGER_URL="$SWAGGER_URL_INPUT" >> $GITHUB_ENV

#         # Extract the api version from the swagger url
#         x=`echo $SWAGGER_URL_INPUT | grep -Po '/v.*?/' | tr -d '/'`
#         echo API_VERSION="`echo $SWAGGER_URL_INPUT | grep -Po '/v.*?/' | tr -d '/'`" >> $GITHUB_ENV
#         echo TEST="$x" >> $GITHUB_ENV

#     - name: Print environment variables
#       run: |
#         echo SWAGGER_URL $SWAGGER_URL
#         echo API_VERSION $API_VERSION
#         echo TEST $TEST

    # - name: Run python file
    #   run: python test.py --swagger ${{ inputs.SWAGGER_URL }}
      
#     - name: Run powershell file
#       run: pwsh test.ps1 --Param1 $SWAGGER_URL
      
#     - name: Change a file
#       run: |
#         echo hello2 > test.txt

#     - uses: tibdex/github-app-token@v1
#       id: generate-token
#       with:
#         app_id: ${{ secrets.APP_ID }}
#         private_key: ${{ secrets.APP_PRIVATE_KEY }}

#     - name: Create Pull Request
#       uses: peter-evans/create-pull-request@v4.2.3
#       with:
#         token: ${{ steps.generate-token.outputs.token }}
#         branch: my-test-branch
#         delete-branch: true
#         title: "Created a PR"
#         commit-message: "Created a PR"
#         body: "Created a PR with version ${{ env.API_VERSION }}"
#         assignees: ${{ github.actor }}
